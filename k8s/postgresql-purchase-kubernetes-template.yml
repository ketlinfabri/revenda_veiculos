apiVersion: v1
kind: Namespace
metadata:
  name: postgres-purchase
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: postgres-purchase
data:
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_DB: ${POSTGRES_DB}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: postgres-purchase
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: postgres-purchase
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: postgres-purchase
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: schema-configmap
  namespace: postgres-purchase
data:
  schema.sql: |
    CREATE TYPE tipo_pagamento_enum AS ENUM ('credito', 'debito', 'pix');

    CREATE TABLE IF NOT EXISTS purchase (
      id SERIAL PRIMARY KEY,
      id_veiculo INTEGER NOT NULL REFERENCES vehicles(id),
      id_comprador VARCHAR NOT NULL,
      tipo_pagamento tipo_pagamento_enum NOT NULL,
      dt_compra TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
    );
---
apiVersion: batch/v1
kind: Job
metadata:
  name: init-db
  namespace: postgres-purchase
spec:
  template:
    spec:
      containers:
      - name: init-db
        image: postgres:15
        env:
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                name: postgres-config
                key: POSTGRES_DB
          - name: POSTGRES_USER
            valueFrom:
              configMapKeyRef:
                name: postgres-config
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: postgres-config
                key: POSTGRES_PASSWORD
        volumeMounts:
          - name: schema-volume
            mountPath: /docker-entrypoint-initdb.d
        command: ["psql"]
        args: ["-h", "postgres", "-U", "appuser", "-d", "appdb", "-f", "/docker-entrypoint-initdb.d/schema.sql"]
      restartPolicy: OnFailure
      volumes:
        - name: schema-volume
          configMap:
            name: schema-configmap
